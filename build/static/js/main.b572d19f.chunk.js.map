{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,EAjCY,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,uBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAKlB,UACI,6BAAKD,EAAa,IAClB,uBACIQ,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,c,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QARxB,kBAWZM,GAXY,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCkBDS,EAjBC,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SACd,ECJwB,SAACA,GACzB,MAAyBd,mBAAS,CAC9BqB,KAAM,GACNe,SAAU,IAFd,mBAAOC,EAAP,KAAaC,EAAb,KAaA,OARAR,QAAQC,IAAI,MAAQjB,GACpByB,qBAAU,WACN1B,EAAQC,GAAU0B,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACpCjB,KAAKoB,EACLL,SAAU,SAEf,CAACtB,IAEGuB,EDVyBK,CAAa5B,GAAjCa,EAAZ,EAAON,KAAce,EAArB,EAAqBA,QACrB,OACI,qCACI,6BAAKtB,IACHsB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAEQL,EAAOJ,KAAK,SAAAC,GACR,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEUtCkB,EArBM,WAEjB,MAAoC3C,mBAAS,IAA7C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ6C,EAAWrB,KAAK,SAACf,GAAD,OACZ,cAAC,EAAD,CAAmBM,SAAUN,GAAfA,Y,MCXtCqC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b572d19f.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue ,setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            setCategories(cat => [inputValue,...cat]);\n            setInputValue('');\n        }   \n    }\n    \n    return (\n        <form onSubmit={handleSubmit}>\n            <h1>{inputValue + 1}</h1>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories : PropTypes.func.isRequired,\n}\n\nexport default AddCategory;","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=llUzBwVD4TXZN29IF2ALF4s2Sd7oLjzb`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title : img.title,\n            url : img.images?.downsized_medium.url,\n        }\n    });\n    return gifs;\n}","export const GifGridItem = ({id,title,url}) => {\n    console.log(id,title,url);\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}","import { getGifs } from \"../helpers/getGifs\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\n\n\nconst GifGrid = ({category}) => {\n    const {data:images , loading} = useFetchGifs(category);\n    return (\n        <>\n            <h3>{category}</h3>\n            { loading && <p>Loading</p> }\n            <div className=\"card-grid\">   \n                {\n                    images.map( img => {\n                        return <GifGridItem key={img.id} {...img} />\n                    })\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid;","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    const [state,setState] = useState({\n        data: [],\n        loading : true,\n    });\n\n    console.log(\"cat\" + category);\n    useEffect(() =>{\n        getGifs(category).then(imgs => setState({\n            data:imgs,\n            loading : false,\n        }));\n    }, [category]);\n\n    return state;\n}","import { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState([]);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr/>\n            <ol>\n                {\n                    categories.map( (cat) => (\n                        <GifGrid key={cat} category={cat}/>\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}